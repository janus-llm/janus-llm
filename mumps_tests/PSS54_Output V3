Requirements:

1. The python application must have a function named "ALL" that accepts three parameters: PSSIEN, PSSFT, and LIST.
2. The parameter PSSIEN is an integer that represents the IEN of the entry in the RX CONSULT file (#54).
3. The parameter PSSFT is a string that represents the free text name in the RX CONSULT file (#54).
4. The parameter LIST is a string representing the subscript of the ^TMP array in the form ^TMP($J,LIST,Field Number.
5. The function should return the NAME field (#.01) and the TEXT field (#1) of the RX CONSULT file (#54).
6. If the LIST parameter is empty, the function should return without processing any data.
7. The function should clear the ^TMP($J,LIST) array at the beginning.
8. If both PSSIEN and PSSFT parameters are empty or PSSIEN is not a valid integer, the function should set ^TMP($J,LIST,0) to -1^NO DATA FOUND.
9. If PSSIEN has a value but is not a valid integer, the function should set ^TMP($J,LIST,0) to -1^NO DATA FOUND.
10. If PSSIEN has a value and is a valid integer, the function should find the entry in the RX CONSULT file (#54) with the corresponding IEN.
11. If the entry is not found, the function should set ^TMP($J,LIST,0) to -1^NO DATA FOUND.
12. If the entry is found, the function should set ^TMP($J,LIST,0) to 1 and retrieve the NAME field and TEXT field of the entry.
13. The function should use the FIND1^DIC function to find the entry if PSSIEN has a value.
14. The function should use the GETS^DIQ function to retrieve the NAME field and TEXT field of the entry.
15. The function should store the NAME field in ^TMP($J,LIST,+PSSIEN,.01) and the TEXT field in ^TMP($J,LIST,+PSSIEN,"TXT",+PSS(2),.01).
16. If PSSIEN is empty but PSSFT has a value, the function should check if PSSFT contains "??".
17. If PSSFT contains "??" the function should loop through all entries in the RX CONSULT file (#54) and retrieve the NAME field and TEXT field for each entry.
18. The function should store the NAME field in ^TMP($J,LIST,PSSIEN,.01) and the TEXT field in ^TMP($J,LIST,PSSIEN,"TXT",+PSS(2),.01).
19. The function should set ^TMP($J,LIST,0) to the total number of entries found if there are any, or -1^NO DATA FOUND if there are no entries.
20. The function should have another function named "LOOKUP" that accepts two parameters: PSSSRCH and LIST.
21. The parameter PSSSRCH is the IEN of the entry in the RX CONSULT file (#54) to look up.
22. The function should return the NAME field (#.01) of the RX CONSULT file (#54) for the given entry.
23. The function should clear the ^TMP($J,LIST) array at the beginning.
24. If the LIST parameter is empty, the function should return without processing any data.
25. If the PSSSRCH parameter is empty, the function should set ^TMP($J,LIST,0) to -1^NO DATA FOUND.
26. The function should use the FIND^DIC function to find the entry in the RX CONSULT file (#54) with the corresponding IEN.
27. If the entry is not found, the function should set ^TMP($J,LIST,0) to -1^NO DATA FOUND.
28. If the entry is found, the function should set ^TMP($J,LIST,0) to the total number of entries found.
29. The function should store the NAME field in ^TMP($J,LIST,PSSIEN,.01) and create an index in ^TMP($J,LIST,"B",$P($G(^TMP("DILIST",$J,PSSXX,0)),U,2),+^TMP("DILIST",$J,PSSXX,0)).
30. The function should have a nested function called "SETZRO" that sets the ^TMP($J,LIST,+PSS(1),.01) and ^TMP($J,LIST,"B",$G(PSS54(54,PSS(1),.01,"I")),+PSS(1)) values based on the retrieved data.
31. The function should have another nested function called "SETTXT" that sets the ^TMP($J,LIST,+PSSIEN,"TXT",+PSS(2),.01) value based on the retrieved data.
32. The function should have a function named "LOOP" that loops through all entries in the RX CONSULT file (#54) and retrieves the NAME field and TEXT field for each entry.
33. The function should use the GETS^DIQ function to retrieve the NAME field and TEXT field of each entry.
34. The function should store the NAME field in ^TMP($J,LIST,+PSS(1),.01) and the TEXT field in ^TMP($J,LIST,+PSSIEN,"TXT",+PSS(2),.01).
35. The function should set ^TMP($J,LIST,0) to the total number of entries found if there are any, or -1^NO DATA FOUND if there are no entries.

Note: The dependencies of this code include the use of MUMPS functions FIND1^DIC, FIND^DIC, and GETS^DIQ. These functions are external to the code and should be implemented in the python application to replicate the functionality of the MUMPS code.