Requirements for Building Indexes for Pharmacy Patient File in Python:

1. The system shall build indexes for the Pharmacy Patient File.
2. The system shall remove any existing indexes before building new ones.
3. The system shall retrieve the global name for the Pharmacy Patient File.
4. The system shall retrieve the number of entries in the Pharmacy Patient File.
5. The system shall calculate the number of entries to process for progress tracking purposes.
6. The system shall display a message indicating the number of entries to process.
7. The system shall record the start time of the indexing process.
8. The system shall initialize variables for tracking the number of entries processed and any errors encountered.
9. The system shall iterate through each entry in the Pharmacy Patient File.
10. The system shall display a progress message for every 10% of entries processed.
11. The system shall process the Unit Dose entries for each patient.
12. The system shall retrieve the start date and stop date for each Unit Dose entry.
13. The system shall check for missing start dates and record an error if found.
14. The system shall check for missing stop dates and record an error if found.
15. The system shall process the Drug entries for each Unit Dose entry.
16. The system shall check for missing drugs and record an error if found.
17. The system shall store the index information for each Unit Dose entry in the appropriate index structures.
18. The system shall increment the count of indexed entries.
19. The system shall process the IV entries for each patient.
20. The system shall retrieve the start date and stop date for each IV entry.
21. The system shall check for missing start dates and record an error if found.
22. The system shall check for missing stop dates and record an error if found.
23. The system shall process the Additives for each IV entry.
24. The system shall check for missing additives and record an error if found.
25. The system shall retrieve the drug information for each additive.
26. The system shall check for missing drugs in the additives and record an error if found.
27. The system shall store the index information for each additive in the appropriate index structures.
28. The system shall increment the count of indexed entries.
29. The system shall process the Solutions for each IV entry.
30. The system shall check for missing solutions and record an error if found.
31. The system shall retrieve the drug information for each solution.
32. The system shall check for missing drugs in the solutions and record an error if found.
33. The system shall store the index information for each solution in the appropriate index structures.
34. The system shall increment the count of indexed entries.
35. The system shall process the NVA entries for each patient.
36. The system shall retrieve the start date for each NVA entry.
37. The system shall check for missing start dates and record an error if found.
38. The system shall retrieve the stop date for each NVA entry.
39. The system shall use a default value of "U" followed by the patient's DFN if the stop date is missing.
40. The system shall store the index information for each NVA entry in the appropriate index structures.
41. The system shall increment the count of indexed entries.
42. The system shall record the end time of the indexing process.
43. The system shall display the number of indexed entries.
44. The system shall display the number of errors encountered.
45. The system shall calculate and display the total processing time.
46. The system shall send a message if any errors were encountered during indexing.
47. The system shall send a MailMan message with the indexing results.
48. The system shall store the global name, builder, and date of the index in the appropriate index structures.