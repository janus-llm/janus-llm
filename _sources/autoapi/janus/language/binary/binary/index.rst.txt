:py:mod:`janus.language.binary.binary`
======================================

.. py:module:: janus.language.binary.binary


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   janus.language.binary.binary.BinaryCombiner
   janus.language.binary.binary.BinarySplitter




Attributes
~~~~~~~~~~

.. autoapisummary::

   janus.language.binary.binary.log


.. py:data:: log

   

.. py:class:: BinaryCombiner


   Bases: :py:obj:`janus.language.combine.Combiner`

   A class that combines code blocks into binary files.

   Initialize a BinaryCombiner instance.


.. py:class:: BinarySplitter(model = None, max_tokens = 4096)


   Bases: :py:obj:`janus.language.treesitter.TreeSitterSplitter`

   A class for splitting binary code into functional blocks to prompt
   with for transcoding.

   Initialize a BinarySplitter instance.

   :param model: The language model to use for the binary code
   :param max_tokens: The maximum number of tokens supported by the model

   .. py:method:: split(file)

      Split the given file into functional code blocks.

      :param file: The file to split into functional blocks.

      :returns: A `CodeBlock` made up of nested `CodeBlock`s.



