:py:mod:`janus.cli`
===================

.. py:module:: janus.cli


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   janus.cli.translate
   janus.cli.db_init
   janus.cli.db_status
   janus.cli.db_ls
   janus.cli.db_add
   janus.cli.db_rm
   janus.cli.llm_add



Attributes
~~~~~~~~~~

.. autoapisummary::

   janus.cli.log
   janus.cli.homedir
   janus.cli.janus_dir
   janus.cli.db_file
   janus.cli.db_loc
   janus.cli.app
   janus.cli.db
   janus.cli.llm


.. py:data:: log

   

.. py:data:: homedir

   

.. py:data:: janus_dir

   

.. py:data:: db_file

   

.. py:data:: db_loc

   

.. py:data:: app

   

.. py:data:: db

   

.. py:data:: llm

   

.. py:function:: translate(input_dir, source_lang, output_dir, target_lang, llm_name = 'gpt-3.5-turbo', max_prompts = 10, overwrite = False, temp = 0.7, prompt_template = 'simple', parser_type = 'code', collection = None)


.. py:function:: db_init(path = str(janus_dir / 'chroma.db'), url = '')


.. py:function:: db_status()


.. py:function:: db_ls(collection_name = None, peek = None)

   List the current database's collections


.. py:function:: db_add(collection_name, input_dir = './', input_lang = 'python', max_tokens = 4096)

   Add a collection to the database

   :param collection_name: The name of the collection to add
   :param input_dir: The directory containing the source code to be added
   :param input_lang: The language of the source code


.. py:function:: db_rm(collection_name)

   Remove a collection from the database

   :param collection_name: The name of the collection to remove


.. py:function:: llm_add(model_name, model_type = 'OpenAI')


